{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/countries.js","components/SearchBar/listcategories.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","className","rel","href","this","props","business","url","target","src","imageSrc","alt","name","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","key","id","split","SearchBar","term","location","sortBy","suggestions","suggestionsCategories","items","listcategories","countries","handleTermChange","bind","handleLocationChange","handleSearch","handleSortByChange","_handleKeyDown","sortByOptions","sortByOption","setState","searchYelp","event","value","replace","length","regex","RegExp","sort","filter","v","test","item","onClick","suggestionSelected","categorySelected","e","preventDefault","Object","keys","sortByOptionValue","getSortByClass","renderSortByOptions","placeholder","onChange","onKeyDown","renderSuggestions","renderCategories","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","corlat","coordinates","latitude","corlong","longitude","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.61a1f651.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n  render() {\n    return (\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <a rel=\"noopener noreferrer\" href={this.props.business.url} target='_blank'><img  src={this.props.business.imageSrc} alt='' rel=\"noopener noreferrer\" /></a>\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\">\n          <div className=\"Business-address\">\n            <p><a  rel=\"noopener noreferrer\" href={`https://www.google.com/maps/search/?api=1&query=${this.props.business.name}`} target='_blank'>{this.props.business.address}</a></p>\n            <p>{this.props.business.city}</p>\n            <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\n          </div>\n          <div className=\"Business-reviews\">\n            <h3>{this.props.business.category.toUpperCase()}</h3>\n            <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\n            <p>{`${this.props.business.reviewCount} reviews`}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\n\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n\n  render() {\n    return (\n      <div className=\"BusinessList\">\n        {this.props.businesses? this.props.businesses.map(business => {\n            return <Business business={business} key={business.id} />\n          })\n        :null}\n      </div>\n    );\n  }\n}\n\nexport default BusinessList;","export default`ARGENTINA\nBuenos Aires\nAUSTRALIA\nAdelaide\nBrisbane\nMelbourne\nPerth\nSydney\nAUSTRIA\nWien\nBELGIUM\nAntwerpen\nBruxelles\nBRAZIL\nRio de Janeiro\nSão Paulo\nCANADA\nCalgary\nEdmonton\nHalifax\nMontréal\nOttawa\nToronto\nVancouver\nCHILE\nSantiago\nCZECH REPUBLIC\nPraha\nDENMARK\nKøbenhavn\nFINLAND\nHelsinki\nFRANCE\nLyon\nMarseille\nParis\nGERMANY\nBerlin\nFrankfurt am Main\nHamburg\nKöln\nMünchen\nHONG KONG\n香港\nITALY\nMilano\nRoma\nJAPAN\n大阪市\n東京\nMALAYSIA\nKuala Lumpur\nMEXICO\nMéxico, D.F.\nNEW ZEALAND\nAuckland\nNORWAY\nOslo\nPHILIPPINES\nManila\nPOLAND\nKraków\nWarszawa\nPORTUGAL\nLisboa\nREPUBLIC OF IRELAND\nDublin\nSINGAPORE\nSingapore\nSPAIN\nBarcelona\nMadrid\nSWEDEN\nStockholm\nSWITZERLAND\nZürich\nTAIWAN\n台北市\nTHE NETHERLANDS\nAmsterdam\nTURKEY\nİstanbul\nUNITED KINGDOM\nBelfast\nBrighton\nBristol\nCardiff\nEdinburgh\nUNITED KINGDOM\nGlasgow\nLeeds\nLiverpool\nLondon\nManchester\nAZ\nPhoenix\nScottsdale\nTempe\nTucson\nCA\nAlameda\nAlbany\nAlhambra\nAnaheim\nBelmont\nBerkeley\nBeverly Hills\nBig Sur\nBurbank\nConcord\nCosta Mesa\nCulver City\nCupertino\nDaly City\nDavis\nDublin\nEmeryville\nFoster City\nFremont\nGlendale\nHayward\nHealdsburg\nHuntington Beach\nIrvine\nLa Jolla\nLivermore\nLong Beach\nLos Altos\nLos Angeles\nLos Gatos\nMarina del Rey\nMenlo Park\nMill Valley\nMillbrae\nMilpitas\nMonterey\nMountain View\nNapa\nNewark\nNewport Beach\nOakland\nOrange County\nPalo Alto\nPark La Brea\nPasadena\nPleasanton\nRedondo Beach\nRedwood City\nSacramento\nSan Bruno\nSan Carlos\nSan Diego\nSan Francisco\nSan Jose\nSan Leandro\nSan Mateo\nSan Rafael\nSanta Barbara\nSanta Clara\nSanta Cruz\nSanta Monica\nCA\nSanta Rosa\nSausalito\nSonoma\nSouth Lake Tahoe\nStockton\nStudio City\nSunnyvale\nTorrance\nUnion City\nVenice\nWalnut Creek\nWest Hollywood\nWest Los Angeles\nWestwood\nYountville\nCO\nBoulder\nDenver\nCT\nHartford\nNew Haven\nDC\nWashington, DC\nFL\nFort Lauderdale\nGainesville\nMiami\nMiami Beach\nOrlando\nTampa\nGA\nAtlanta\nSavannah\nHI\nHonolulu\nLahaina\nIA\nIowa City\nID\nBoise\nIL\nChicago\nEvanston\nNaperville\nSchaumburg\nSkokie\nIN\nBloomington\nIndianapolis\nKY\nLouisville\nLA\nNew Orleans\nMA\nAllston\nBoston\nBrighton\nBrookline\nCambridge\nSomerville\nMD\nBaltimore\nMI\nAnn Arbor\nDetroit\nMN\nMinneapolis\nSaint Paul\nMO\nKansas City\nSaint Louis\nNC\nCharlotte\nDurham\nRaleigh\nNJ\nNewark\nPrinceton\nNM\nAlbuquerque\nSanta Fe\nNV\nLas Vegas\nReno\nNY\nBrooklyn\nLong Island City\nNew York\nFlushing\nOH\nCincinnati\nCleveland\nColumbus\nOR\nPortland\nSalem\nPA\nPhiladelphia\nPittsburgh\nRI\nProvidence\nSC\nCharleston\nTN\nMemphis\nNashville\nTX\nAustin\nDallas\nHouston\nSan Antonio\nUT\nSalt Lake City\nVA\nAlexandria\nArlington\nRichmond\nVT\nBurlington\nWA\nBellevue\nRedmond\nSeattle\nWI\nMadison\nMilwaukee`.split('\\n') ","export default `\n\nArts & Entertainment\nAutomotive\nBeauty & Spas\nBicycles\nEducation\nEvent Planning & Services\nFinancial Services\nFood\nHealth & Medical\nHome Services\nHotel & Travel\nLocal Flavor\nLocal Services\nMass Media\nNightlife\nPets\nProfessional Services\nPublic Service & Government\nReal Estate\nReligious Organizations\nRestaurants\nShopping\nACTIVE LIFE\nBoating\nBobsledding\nBocce Ball\nBowling\nBubble Soccer\nBungee Jumping\nCarousels\nChallenge Courses\nClimbing\nCycling Classes\nDay Camps\nDisc Golf\nDiving\nFree Diving\nScuba Diving\nEscape Games\nExperiences\nFencing Clubs\nFishing\nFitness & Instruction\nAerial Fitness\nBarre Classes\nBoot Camps\nBoxing\nCardio Classes\nDance Studios\nEMS Training\nGolf Lessons\nGyms\nCircuit Training Gyms\nInterval Training Gyms\nMartial Arts\nBrazilian Jiu-jitsu\nChinese Martial Arts\nKarate\nKickboxing\nMuay Thai\nTaekwondo\nMeditation Centers\nPilates\nQi Gong\nSelf-defense Classes\nSwimming Lessons/Schools\nTai Chi\nTrainers\nYoga\nFlyboarding\nGliding\nGo Karts\nGolf\nGun/Rifle Ranges\nGymnastics\nHandball\nHang Gliding\nHiking\nHorse Racing\nHorseback Riding\nHot Air Balloons\nIndoor Playcentre\nJet Skis\nKids Activities\nKiteboarding\nLakes\nLaser Tag\nLawn Bowling\nMini Golf\nMountain Biking`.split('\\n')","import React from 'react';\nimport './SearchBar.css';\nimport countries from './countries'\nimport listcategories from './listcategories'\n\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match',\n      suggestions:[],\n      suggestionsCategories:[]\n    };\n    this.items=listcategories\n    this.listcategories=countries\n    \n\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this._handleKeyDown=this._handleKeyDown.bind(this)\n\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n    };\n  }\n  \n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';  \n    }\n    return '';\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy: sortByOption})\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n  }\n\n  handleTermChange(event) {\n    let suggestions=[]\n    this.setState({term: event.target.value.replace(/\\s/g, '')});\n    if( event.target.value.length > 0){\n      const regex =new RegExp(`${event.target.value}`,'i');\n      suggestions = this.items.sort().filter(v=>regex.test(v));\n    }\n    this.setState(()=>({ suggestions }))   \n  }\n  renderSuggestions(){\n    const {suggestions} =this.state\n    if(suggestions.length !== 0){\n      return(\n        <ul>\n          {suggestions.map((item)=><li onClick={()=>this.suggestionSelected(item)}>{item}</li>)}\n        </ul>\n      )\n    }\n    return null\n  }\n  renderCategories(){\n    const {suggestionsCategories}=this.state\n    if(suggestionsCategories.length!==0){\n      return(\n        <ul>\n        {suggestionsCategories.map((item)=><li onClick={()=>this.categorySelected(item)}>{item}</li>)}\n      </ul>\n      )\n    }\n  }\n  categorySelected(value){\n    this.setState(()=>({\n      location:value,\n      suggestionsCategories:[]\n    }))\n  }\n  suggestionSelected(value){\n    this.setState(()=>({\n      term:value,\n      suggestions:[]\n    }))\n  }\n  handleLocationChange(event) {\n    let suggestionsCategories=[]\n    this.setState({location: event.target.value.replace(/\\s/g, '')})\n    if(event.target.value.length>0){\n      const regex =new RegExp(`${event.target.value}`,'i');\n      suggestionsCategories = this.listcategories.sort().filter(v=>regex.test(v));\n    }\n    this.setState(()=>({ suggestionsCategories}))\n  }\n  _handleKeyDown(e){\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    }\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    event.preventDefault();\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (<li className={this.getSortByClass(sortByOptionValue)}\n                  key={sortByOptionValue}\n                  onClick={this.handleSortByChange.bind(this, sortByOptionValue)} >\n                {sortByOption}\n             </li>);\n    });\n  }\n\n  render() {\n    const {term} =this.state\n    const {location}=this.state\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\" >\n                <div id=\"one\">\n                  <input value={term} placeholder=\"Search Business type\" onChange={this.handleTermChange} onKeyDown={this._handleKeyDown} \n                />\n               {this.renderSuggestions()}\n                </div>\n              \n                <div id=\"two\">\n                  <input placeholder=\"Search Location?\" onKeyDown={this._handleKeyDown} value={location}  onChange={this.handleLocationChange}/>\n                {this.renderCategories()}\n                </div>\n        </div>\n        <div className=\"SearchBar-submit\">\n          <a onClick={this.handleSearch} onKeyDown={this._handleKeyDown}>Let's Go</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n\n/*\n<Autocomplete placeholder=\"Search Businesses\" onChange={this.handleTermChange} onKeyDown={this._handleKeyDown}\n        suggestions={this.suggestions}\n      />\n\n<input placeholder=\"Search Businesses\" onChange={this.handleTermChange} onKeyDown={this._handleKeyDown}/>\n        \n <input placeholder=\"Where?\" onKeyDown={this._handleKeyDown} onChange={this.handleLocationChange}/>\n        </div>\n*/","const apiKey = 'UyTCt7ga03e6Nt4YdIq4x8DvtZkihyiRcTigi917DRYauZXyOs2wM7qV8bxiQRuEah3yJogMmibP5x3NkQxngfF3UsQB_RZMYMpX4BSdh-YwUdjn14V0Q1NqImxSXnYx'; // Insert API key here.\n\nconst Yelp = {\n  search(term, location, sortBy) {\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (jsonResponse.businesses) {\n        return jsonResponse.businesses.map(business => ({\n          id: business.id,\n          imageSrc: business.image_url,\n          name: business.name,\n          address: business.location.address1,\n          city: business.location.city,\n          state: business.location.state,\n          zipCode: business.location.zip_code,\n          category: business.categories[0].title,\n          rating: business.rating,\n          reviewCount: business.review_count,\n          corlat : business.coordinates.latitude,\n          corlong: business.coordinates.longitude,\n          url: business.url\n        }));\n      }\n    });\n  }\n};\n\n\nexport default Yelp;\n","import React from 'react';\nimport './App.css';\n\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\n\nimport Yelp from '../../util/Yelp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      businesses: []\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term , location , sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({businesses: businesses});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Quick Search</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}